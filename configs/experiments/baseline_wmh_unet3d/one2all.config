from ...assets.core import *
from ...assets.no_pred import *

from ...assets.dataset.wmh import *
from ...assets.cross_val.one2all import *
from ...assets.batch_iter.patch_sampling_3d import *
from ...assets.architecture.unet3d import *
from ...assets.metric.segmentation import *

x_patch_size = y_patch_size = np.array([64,64,32])
n_epochs = 100
batch_size = 16
val_size = 0
lr_init = 1e-4

lr = Schedule(initial=lr_init, epoch2value_multiplier={40: 0.1, 90: 0.1, })
optimizer = torch.optim.Adam(
    architecture.parameters(),
    lr=lr_init,
    weight_decay=0
)

val_metrics = {'dice_score': partial(aggregate_metric_probably_with_ids, metric=dice_metric)}
final_metrics = {'dice_score': dice_metric, 'sdice_score': sdice_metric}
